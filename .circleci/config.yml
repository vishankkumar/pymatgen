version: 2
jobs:
  py3test:
    working_directory: ~/pymatgen
    docker:
      - image: materialsvirtuallab/circle-ci-pmg-py3:3.7.3
#        environment:
#          PMG_MAPI_ENDPOINT: https://zola.lbl.gov/rest/v2
    # parallelism: 4
    steps:
      - checkout
      - run:
          command: |
            export PATH=$HOME/miniconda3/bin:$PATH
            conda config --set always_yes yes --set changeps1 no
            conda update -q conda
            conda info -a
            conda create -q -n test-environment python=3.7 numpy scipy matplotlib sympy cython pandas networkx pytest cmake h5py
            source activate test-environment
            conda update --quiet numpy scipy matplotlib sympy cython pandas networkx pytest pip cmake h5py
            conda install --quiet -c openbabel openbabel
            # conda install --quiet -c clinicalgraphics vtk
            conda install --quiet -c conda-forge python-igraph
            pip install --quiet --ignore-installed -r requirements.txt -r requirements-optional.txt
            export CFLAGS=$CFLAGS" -std=gnu++11"
            pip install BoltzTraP2
            export CFLAGS=${CFLAGS%% -std=gnu++11}
      - run:
          command: |
            export PATH=$HOME/miniconda3/bin:$PATH
            # Add executables and path.
            for EXEPATH in `pwd`/cmd_line/*/Linux_64bit; do export PATH=$PATH:$EXEPATH; done
            export GULP_LIB=`pwd`/cmd_line/gulp/Libraries
            export MPLBACKEND=Agg
            source activate test-environment
            pip install --quiet -e .
            pytest --ignore=pymatgen/analysis/tests/test_pourbaix_diagram.py --cov=pymatgen --cov-report html:coverage_reports pymatgen
            echo "pycodestyle checks..."
            pycodestyle pymatgen
            echo "--- Done ---"
            # Command line tests
            pmg structure --convert --filenames test_files/Li2O.cif POSCAR.pmg
            pmg structure --convert --filenames POSCAR.pmg pmg.cif
            pmg analyze test_files
            rm vasp_data.gz
            rm pmg.cif
            rm POSCAR.pmg
            if [ "$CI_PULL_REQUEST" == "" ]; then coveralls; fi
          no_output_timeout: 3600
      - store_artifacts:
          path: coverage_reports/
          destination: tr1
      - store_test_results:
          path: coverage_reports/

workflows:
  version: 2
  build_and_test:
    jobs:
      - py3test
